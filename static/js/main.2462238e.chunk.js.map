{"version":3,"sources":["common/InputField.js","common/TextArea.js","validation.js","database.js","context.js","pages/CreateTodo.js","pages/TodoList.js","pages/Todo.js","pages/EditTodo.js","App.js","index.js"],"names":["InputField","label","type","name","onChange","value","errors","onKeyDown","className","htmlFor","TextArea","style","resize","fieldSchema","yup","shape","title","required","description","db","PouchDB","TodoContext","createContext","initialValues","tasks","status","due_date","Date","CreateTodo","history","useState","setTasks","handleCreateTodo","useContext","to","validationSchema","validateOnChange","onSubmit","values","push","handleSubmit","handleChange","setFieldValue","onClick","newTask","id","uuid","task","completed","state","length","map","key","selected","date","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","placeholderText","TodoList","todos","loading","handleDeleteTodo","setValue","event","target","handleOnChange","placeholder","aria-describedby","filter","todo","toLowerCase","includes","_id","pathname","_rev","position","bottom","right","Todo","match","url","params","handleGetTodoById","handleEditTodo","handleToggleTask","updatedTasks","taskToEdit","useEffect","todoId","res","taskToDelete","handleDeleteTask","EditTodo","location","newTasks","setNewTasks","goBack","parse","App","handleGetTodos","exact","path","render","props","ReactDOM","children","setTodos","setTodo","setLoading","a","async","get","response","console","error","Provider","allDocs","include_docs","rows","row","doc","post","newTodo","editedTodo","put","updatedTodo","updatedList","remove","document","getElementById"],"mappings":"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","file":"static/js/main.2462238e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst InputField = ({\n  label,\n  type,\n  name,\n  onChange,\n  value,\n  errors,\n  onKeyDown\n}) => {\n  return (\n    <div className=\"measure\">\n      <label htmlFor={name} className=\"f4 b db mb2\">\n        {label}\n      </label>\n      <input\n        onKeyDown={onKeyDown}\n        className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n        type={type}\n        name={name}\n        onChange={onChange}\n        value={value}\n      />\n      {errors ? (\n        <small className=\"f6 black-60 db mb2 red\">{errors}</small>\n      ) : null}\n    </div>\n  );\n};\n\nexport default InputField;\n","import React from \"react\";\n\nconst TextArea = ({ label, name, onChange, value, errors }) => {\n  return (\n    <div>\n      <label htmlFor={name} className=\"f4 b db mb2\">\n        {label}\n      </label>\n      <textarea\n        style={{ resize: \"none\" }}\n        onChange={onChange}\n        value={value}\n        name={name}\n        className=\"db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2 h3\"\n      ></textarea>\n      {errors ? <small className=\"f6 black-60 red\">{errors}</small> : null}\n    </div>\n  );\n};\n\nexport default TextArea;\n","import * as yup from \"yup\";\n\nconst fieldSchema = yup.object().shape({\n  title: yup.string().required(\"This field is required!\"),\n  description: yup.string().required(\"Cmon, add a lil description\")\n});\n\nexport default fieldSchema;\n","import PouchDB from \"pouchdb-browser\";\nconst db = new PouchDB(\"northone-todolist\");\n\nexport default db;\n","import React, { createContext, useState } from \"react\";\nimport db from \"./database\";\nconst TodoContext = createContext();\n\nconst TodoProvider = ({ children }) => {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState();\n  const [loading, setLoading] = useState(null);\n\n  const handleCreateTodo = async todo => {\n    try {\n      const response = await db.post(todo);\n      const newTodo = await db.get(response.id);\n      setTodos(state => {\n        return [...state, newTodo];\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetTodoById = async id => {\n    try {\n      const response = await db.get(id);\n      setTodo(response);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleGetTodos = async () => {\n    try {\n      setLoading(true);\n      const res = await db.allDocs({ include_docs: true });\n      const todos = res.rows.map(row => {\n        return row.doc;\n      });\n      setLoading(false);\n      setTodos(todos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditTodo = async (_rev, _id, editedTodo) => {\n    try {\n      const response = await db.put({\n        _rev,\n        _id,\n        ...editedTodo\n      });\n\n      await handleGetTodoById(response.id);\n      const updatedTodo = await db.get(response.id);\n      const updatedList = todos.map(todo => {\n        if (todo._id === updatedTodo._id) {\n          return updatedTodo;\n        }\n        return todo;\n      });\n      setTodos(updatedList);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteTodo = async (_id, _rev) => {\n    try {\n      const response = await db.remove(_id, _rev);\n      const updatedList = todos.filter(todo => {\n        if (todo._id !== response.id) {\n          return todo;\n        }\n      });\n      setTodos(updatedList);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        todo,\n        todos,\n        handleGetTodoById,\n        handleGetTodos,\n        handleCreateTodo,\n        handleEditTodo,\n        handleDeleteTodo\n      }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport { TodoContext, TodoProvider };\n","import React, { useState, useContext } from \"react\";\nimport { Formik } from \"formik\";\nimport InputField from \"../common/InputField\";\nimport TextArea from \"../common/TextArea\";\nimport { Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.min.css\";\nimport uuid from \"uuid/v4\";\nimport fieldSchema from \"../validation\";\nimport { TodoContext } from \"../context\";\n\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n  tasks: \"\",\n  status: \"pending\",\n  due_date: new Date()\n};\nconst CreateTodo = ({ history }) => {\n  const [tasks, setTasks] = useState([]);\n  const { handleCreateTodo } = useContext(TodoContext);\n  return (\n    <div className=\"flex flex-column justify-center ph3 mw6-ns center-ns\">\n      <Link className=\"link underline black f4\" to=\"/\">\n        <i className=\"fas fa-home\"></i>\n      </Link>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={fieldSchema}\n        validateOnChange={false}\n        onSubmit={values => {\n          values.tasks = tasks;\n          handleCreateTodo(values);\n          history.push(\"/\");\n        }}\n      >\n        {({ handleSubmit, handleChange, setFieldValue, values, errors }) => {\n          return (\n            <form className=\"mt4\" onSubmit={handleSubmit}>\n              <InputField\n                label=\"Title\"\n                type=\"text\"\n                name=\"title\"\n                onChange={handleChange}\n                errors={!errors.title ? null : errors.title}\n              />\n              <TextArea\n                label=\"Description\"\n                type=\"text\"\n                name=\"description\"\n                onChange={handleChange}\n                errors={!errors.description ? null : errors.description}\n              />\n              <div className=\"flex items-end justify-between\">\n                <InputField\n                  label=\"Add some tasks\"\n                  type=\"text\"\n                  value={values.tasks}\n                  name=\"tasks\"\n                  onChange={handleChange}\n                  errors={!errors.tasks ? null : errors.tasks}\n                  // onKeyDown={event => {\n                  //   if (\n                  //     event.key === \"Enter\" ||\n                  //     event.which === 13 ||\n                  //     event.code === \"Enter\"\n                  //   ) {\n                  //     const newTask = {\n                  //       id: uuid(),\n                  //       task: values.tasks,\n                  //       completed: false\n                  //     };\n                  //     setTasks(state => {\n                  //       return [...state, newTask];\n                  //     });\n                  //     setFieldValue(\"tasks\", \"\");\n                  //   }\n                  // }}\n                />\n                <div>\n                  <button\n                    className=\"mb2\"\n                    onClick={() => {\n                      const newTask = {\n                        id: uuid(),\n                        task: values.tasks,\n                        completed: false\n                      };\n                      setTasks(state => {\n                        return [...state, newTask];\n                      });\n                      setFieldValue(\"tasks\", \"\");\n                    }}\n                    type=\"button\"\n                  >\n                    Add\n                  </button>\n                </div>\n              </div>\n              {tasks.length > 0 ? (\n                <ul>\n                  {tasks.map(task => {\n                    return <li key={task.id}>{task.task}</li>;\n                  })}\n                </ul>\n              ) : null}\n              <div className=\"mb5\">\n                <label htmlFor=\"due_date\" className=\"f4 b db mb2\">\n                  Set due date\n                </label>\n                <DatePicker\n                  name=\"due_date\"\n                  selected={values.due_date}\n                  onChange={date => setFieldValue(\"due_date\", date)}\n                  showTimeSelect\n                  timeFormat=\"HH:mm\"\n                  timeIntervals={30}\n                  timeCaption=\"time\"\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                  placeholderText=\"Select a date and time\"\n                />\n              </div>\n              <div className=\"flex mt5\">\n                <div className=\"center\">\n                  <button type=\"reset\">Reset</button>\n                  <button type=\"submit\">Save</button>\n                </div>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default CreateTodo;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TodoContext } from \"../context\";\n\nconst TodoList = () => {\n  const { todos, loading, handleDeleteTodo } = useContext(TodoContext);\n  const [value, setValue] = useState(\"\");\n  const handleOnChange = event => {\n    setValue(event.target.value);\n  };\n  return (\n    <ul className=\"list pa2  flex-ns flex-column-ns center-ns mw6-ns\">\n      <input\n        onChange={event => {\n          handleOnChange(event);\n        }}\n        placeholder=\"Type to search...\"\n        className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n        type=\"text\"\n        aria-describedby=\"search box\"\n      />\n      {loading ? (\n        <div className=\"tc\">Loading...</div>\n      ) : !todos.length ? (\n        <div className=\"tc\">Todo List is empty!</div>\n      ) : (\n        todos\n          .filter(todo => {\n            return todo.title.toLowerCase().includes(value.toLowerCase());\n          })\n          .map(todo => {\n            return (\n              <li\n                className=\"flex justify-between items-center  ba br3 mb1 ph2 grow\"\n                key={todo._id}\n              >\n                <Link\n                  className=\"link black\"\n                  to={{\n                    pathname: `/todo/${todo._id}`,\n                    state: {\n                      todo\n                    }\n                  }}\n                >\n                  <h3 className=\"f4 ttc\">{todo.title}</h3>\n                </Link>\n                <div>\n                  <i\n                    onClick={() => {\n                      handleDeleteTodo(todo._id, todo._rev);\n                    }}\n                    className=\"far fa-trash-alt red pointer\"\n                  ></i>\n                </div>\n              </li>\n            );\n          })\n      )}\n      <Link\n        className=\"link black\"\n        style={{ position: \"absolute\", bottom: \"1rem\", right: \"1rem\" }}\n        to=\"/create\"\n      >\n        <div className=\"ba br-100 h3 w3 flex justify-center items-center\">\n          +\n        </div>\n      </Link>\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TodoContext } from \"../context\";\n\nconst Todo = ({ match }) => {\n  const { url, params } = match;\n  const { handleGetTodoById, todo, handleEditTodo } = useContext(TodoContext);\n\n  const handleToggleTask = task => {\n    const updatedTasks = todo.tasks.map(taskToEdit => {\n      if (taskToEdit.id === task.id) {\n        taskToEdit.completed = !taskToEdit.completed;\n        return taskToEdit;\n      }\n      return taskToEdit;\n    });\n    todo.tasks = updatedTasks;\n    return todo;\n  };\n\n  const handleDeleteTask = task => {\n    const updatedTasks = todo.tasks.filter(taskToDelete => {\n      if (task.id !== taskToDelete.id) {\n        return taskToDelete;\n      }\n    });\n    todo.tasks = updatedTasks;\n    return todo;\n  };\n\n  useEffect(() => {\n    handleGetTodoById(params.todoId);\n  }, []);\n\n  if (!todo) {\n    return <div>Loading todo</div>;\n  }\n\n  return (\n    <div className=\"pa3 mw6-ns center\">\n      <Link className=\"link black underline f4\" to=\"/\">\n        <i className=\"fas fa-home\"></i>\n      </Link>\n      <div className=\"tc ttc\">\n        <h1 className=\"f1 lh-title\">{todo.title}</h1>\n        <p className=\"f3 lh-copy\">{todo.description}</p>\n      </div>\n      {todo.tasks.length > 0 ? (\n        <ul className=\"list pa0\">\n          {todo.tasks.map(task => {\n            return (\n              <li\n                className=\"ba br4 pv1 ph2 mb2 ttc flex justify-between items-center\"\n                key={task.id}\n              >\n                <h1\n                  className={\n                    task.completed\n                      ? `f5 lh-copy normal strike`\n                      : \"f5 lh-copy normal\"\n                  }\n                >\n                  {task.task}\n                </h1>\n                <span>\n                  {!task.completed ? (\n                    <i\n                      onClick={() => {\n                        const res = handleToggleTask(task);\n                        handleEditTodo(todo._id, todo._rev, res);\n                      }}\n                      className=\"grow far fa-circle pointer\"\n                    ></i>\n                  ) : (\n                    <i\n                      onClick={() => {\n                        const res = handleToggleTask(task);\n                        handleEditTodo(todo._id, todo._rev, res);\n                      }}\n                      className=\"grow far fa-check-circle green pointer\"\n                    ></i>\n                  )}\n                  <i\n                    onClick={() => {\n                      const res = handleDeleteTask(task);\n                      handleEditTodo(todo._id, todo._rev, res);\n                    }}\n                    className=\"grow fas fa-trash red ml1 pointer\"\n                  ></i>\n                </span>\n              </li>\n            );\n          })}\n        </ul>\n      ) : null}\n      <Link\n        className=\"link black underline f4\"\n        to={{ pathname: `${url}/edit`, state: { todo } }}\n      >\n        Edit todo\n      </Link>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useContext, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport uuid from \"uuid/v4\";\nimport InputField from \"../common/InputField\";\nimport TextArea from \"../common/TextArea\";\nimport { Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.min.css\";\nimport fieldSchema from \"../validation\";\nimport { TodoContext } from \"../context\";\n\nconst EditTodo = ({ location, history }) => {\n  const { todo } = location.state;\n  const { handleEditTodo } = useContext(TodoContext);\n  const [newTasks, setNewTasks] = useState(todo.tasks);\n  return (\n    <div className=\"flex flex-column justify-center ph3 mw6-ns center-ns\">\n      <div>\n        <Link className=\"link underline black f4\" to=\"/\">\n          <i className=\"fas fa-home\"></i>\n        </Link>\n      </div>\n      <Formik\n        initialValues={{\n          title: todo.title,\n          description: todo.description,\n          status: todo.status,\n          tasks: \"\",\n          due_date: todo.due_date\n        }}\n        validationSchema={fieldSchema}\n        validateOnChange={false}\n        onSubmit={values => {\n          values.tasks = newTasks;\n          handleEditTodo(todo._rev, todo._id, values);\n          history.goBack();\n        }}\n      >\n        {({ handleSubmit, handleChange, setFieldValue, values, errors }) => {\n          return (\n            <form className=\"mt4\" onSubmit={handleSubmit}>\n              <InputField\n                label=\"Title\"\n                type=\"text\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                errors={!errors.title ? null : errors.title}\n              />\n              <TextArea\n                label=\"Description\"\n                type=\"text\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n                errors={!errors.description ? null : errors.description}\n              />\n\n              <div className=\"flex items-end justify-between\">\n                <InputField\n                  label=\"Add some tasks\"\n                  type=\"text\"\n                  value={values.tasks}\n                  name=\"tasks\"\n                  onChange={handleChange}\n                  errors={!errors.tasks ? null : errors.tasks}\n                  // onKeyDown={event => {\n                  //   if (\n                  //     event.key === \"Enter\" ||\n                  //     event.which === 13 ||\n                  //     event.code === \"Enter\"\n                  //   ) {\n                  //     const newTask = {\n                  //       id: uuid(),\n                  //       task: values.tasks,\n                  //       completed: false\n                  //     };\n                  //     setNewTasks(state => {\n                  //       return [...state, newTask];\n                  //     });\n                  //     setFieldValue(\"tasks\", \"\");\n                  //   }\n                  // }}\n                />\n                <div>\n                  <button\n                    className=\"mb2\"\n                    onClick={() => {\n                      const newTask = {\n                        id: uuid(),\n                        task: values.tasks,\n                        completed: false\n                      };\n                      setNewTasks(state => {\n                        return [...state, newTask];\n                      });\n                      setFieldValue(\"tasks\", \"\");\n                    }}\n                    type=\"button\"\n                  >\n                    Add\n                  </button>\n                </div>\n              </div>\n              {newTasks.length > 0 ? (\n                <ul>\n                  {newTasks.map(task => {\n                    return <li key={task.id}>{task.task}</li>;\n                  })}\n                </ul>\n              ) : null}\n              <div className=\"mb5\">\n                <label htmlFor=\"due_date\" className=\"f4 b db mb2\">\n                  Set due date\n                </label>\n                <DatePicker\n                  name=\"due_date\"\n                  onChange={date => setFieldValue(\"due_date\", date)}\n                  selected={Date.parse(values.due_date)}\n                  showTimeSelect\n                  timeFormat=\"HH:mm\"\n                  timeIntervals={30}\n                  timeCaption=\"time\"\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                  placeholderText=\"Select new date and time\"\n                />\n              </div>\n              <div className=\"flex mt5\">\n                <div className=\"center\">\n                  <button type=\"reset\">Reset</button>\n                  <button type=\"submit\">Save</button>\n                </div>\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditTodo;\n","import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CreateTodo from \"./pages/CreateTodo\";\nimport TodoList from \"./pages/TodoList\";\nimport Todo from \"./pages/Todo\";\nimport EditTodo from \"./pages/EditTodo\";\nimport { TodoContext } from \"./context\";\n\nconst App = () => {\n  const { handleGetTodos } = useContext(TodoContext);\n\n  useEffect(() => {\n    handleGetTodos();\n  }, []);\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/\"\n        render={props => {\n          return <TodoList {...props} />;\n        }}\n      />\n\n      <Route\n        path=\"/create\"\n        render={props => {\n          return <CreateTodo {...props} />;\n        }}\n      />\n\n      <Route\n        exact\n        path=\"/todo/:todoId\"\n        render={props => {\n          return <Todo {...props} />;\n        }}\n      />\n\n      <Route\n        path=\"/todo/:todoId/edit\"\n        render={props => {\n          return <EditTodo {...props} />;\n        }}\n      />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"tachyons\";\nimport { TodoProvider } from \"./context\";\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}